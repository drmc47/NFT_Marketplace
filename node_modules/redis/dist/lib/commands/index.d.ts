import * as ACL_CAT from './ACL_CAT';
import * as ACL_DELUSER from './ACL_DELUSER';
import * as ACL_GENPASS from './ACL_GENPASS';
import * as ACL_GETUSER from './ACL_GETUSER';
import * as ACL_LIST from './ACL_LIST';
import * as ACL_LOAD from './ACL_LOAD';
import * as ACL_LOG_RESET from './ACL_LOG_RESET';
import * as ACL_LOG from './ACL_LOG';
import * as ACL_SAVE from './ACL_SAVE';
import * as ACL_SETUSER from './ACL_SETUSER';
import * as ACL_USERS from './ACL_USERS';
import * as ACL_WHOAMI from './ACL_WHOAMI';
import * as APPEND from './APPEND';
import * as ASKING from './ASKING';
import * as AUTH from './AUTH';
import * as BGREWRITEAOF from './BGREWRITEAOF';
import * as BGSAVE from './BGSAVE';
import * as BITCOUNT from './BITCOUNT';
import * as BITFIELD from './BITFIELD';
import * as BITOP from './BITOP';
import * as BITPOS from './BITPOS';
import * as BLMOVE from './BLMOVE';
import * as BLPOP from './BLPOP';
import * as BRPOP from './BRPOP';
import * as BRPOPLPUSH from './BRPOPLPUSH';
import * as BZPOPMAX from './BZPOPMAX';
import * as BZPOPMIN from './BZPOPMIN';
import * as CLIENT_INFO from './CLIENT_INFO';
import * as CLUSTER_ADDSLOTS from './CLUSTER_ADDSLOTS';
import * as CLUSTER_FLUSHSLOTS from './CLUSTER_FLUSHSLOTS';
import * as CLUSTER_INFO from './CLUSTER_INFO';
import * as CLUSTER_NODES from './CLUSTER_NODES';
import * as CLUSTER_MEET from './CLUSTER_MEET';
import * as CLUSTER_RESET from './CLUSTER_RESET';
import * as CLUSTER_SETSLOT from './CLUSTER_SETSLOT';
import * as CONFIG_GET from './CONFIG_GET';
import * as CONFIG_RESETASTAT from './CONFIG_RESETSTAT';
import * as CONFIG_REWRITE from './CONFIG_REWRITE';
import * as CONFIG_SET from './CONFIG_SET';
import * as COPY from './COPY';
import * as DBSIZE from './DBSIZE';
import * as DECR from './DECR';
import * as DECRBY from './DECRBY';
import * as DEL from './DEL';
import * as DISCARD from './DISCARD';
import * as DUMP from './DUMP';
import * as ECHO from './ECHO';
import * as EVAL from './EVAL';
import * as EVALSHA from './EVALSHA';
import * as EXISTS from './EXISTS';
import * as EXPIRE from './EXPIRE';
import * as EXPIREAT from './EXPIREAT';
import * as FAILOVER from './FAILOVER';
import * as FLUSHALL from './FLUSHALL';
import * as FLUSHDB from './FLUSHDB';
import * as GEOADD from './GEOADD';
import * as GEODIST from './GEODIST';
import * as GEOHASH from './GEOHASH';
import * as GEOPOS from './GEOPOS';
import * as GEOSEARCH_WITH from './GEOSEARCH_WITH';
import * as GEOSEARCH from './GEOSEARCH';
import * as GEOSEARCHSTORE from './GEOSEARCHSTORE';
import * as GET from './GET';
import * as GETBIT from './GETBIT';
import * as GETDEL from './GETDEL';
import * as GETEX from './GETEX';
import * as GETRANGE from './GETRANGE';
import * as GETSET from './GETSET';
import * as HDEL from './HDEL';
import * as HELLO from './HELLO';
import * as HEXISTS from './HEXISTS';
import * as HGET from './HGET';
import * as HGETALL from './HGETALL';
import * as HINCRBY from './HINCRBY';
import * as HINCRBYFLOAT from './HINCRBYFLOAT';
import * as HKEYS from './HKEYS';
import * as HLEN from './HLEN';
import * as HMGET from './HMGET';
import * as HRANDFIELD_COUNT_WITHVALUES from './HRANDFIELD_COUNT_WITHVALUES';
import * as HRANDFIELD_COUNT from './HRANDFIELD_COUNT';
import * as HRANDFIELD from './HRANDFIELD';
import * as HSCAN from './HSCAN';
import * as HSET from './HSET';
import * as HSETNX from './HSETNX';
import * as HSTRLEN from './HSTRLEN';
import * as HVALS from './HVALS';
import * as INCR from './INCR';
import * as INCRBY from './INCRBY';
import * as INCRBYFLOAT from './INCRBYFLOAT';
import * as INFO from './INFO';
import * as KEYS from './KEYS';
import * as LASTSAVE from './LASTSAVE';
import * as LINDEX from './LINDEX';
import * as LINSERT from './LINSERT';
import * as LLEN from './LLEN';
import * as LMOVE from './LMOVE';
import * as LOLWUT from './LOLWUT';
import * as LPOP_COUNT from './LPOP_COUNT';
import * as LPOP from './LPOP';
import * as LPOS_COUNT from './LPOS_COUNT';
import * as LPOS from './LPOS';
import * as LPUSH from './LPUSH';
import * as LPUSHX from './LPUSHX';
import * as LRANGE from './LRANGE';
import * as LREM from './LREM';
import * as LSET from './LSET';
import * as LTRIM from './LTRIM';
import * as MEMOERY_DOCTOR from './MEMORY_DOCTOR';
import * as MEMORY_MALLOC_STATS from './MEMORY_MALLOC-STATS';
import * as MEMORY_PURGE from './MEMORY_PURGE';
import * as MEMORY_STATS from './MEMORY_STATS';
import * as MEMORY_USAGE from './MEMORY_USAGE';
import * as MGET from './MGET';
import * as MIGRATE from './MIGRATE';
import * as MODULE_LIST from './MODULE_LIST';
import * as MODULE_LOAD from './MODULE_LOAD';
import * as MODULE_UNLOAD from './MODULE_UNLOAD';
import * as MOVE from './MOVE';
import * as MSET from './MSET';
import * as MSETNX from './MSETNX';
import * as PERSIST from './PERSIST';
import * as PEXPIRE from './PEXPIRE';
import * as PEXPIREAT from './PEXPIREAT';
import * as PFADD from './PFADD';
import * as PFCOUNT from './PFCOUNT';
import * as PFMERGE from './PFMERGE';
import * as PING from './PING';
import * as PSETEX from './PSETEX';
import * as PTTL from './PTTL';
import * as PUBLISH from './PUBLISH';
import * as PUBSUB_CHANNELS from './PUBSUB_CHANNELS';
import * as PUBSUB_NUMPAT from './PUBSUB_NUMPAT';
import * as PUBSUB_NUMSUB from './PUBSUB_NUMSUB';
import * as RANDOMKEY from './RANDOMKEY';
import * as READONLY from './READONLY';
import * as READWRITE from './READWRITE';
import * as RENAME from './RENAME';
import * as RENAMENX from './RENAMENX';
import * as REPLICAOF from './REPLICAOF';
import * as RESTORE_ASKING from './RESTORE-ASKING';
import * as ROLE from './ROLE';
import * as RPOP_COUNT from './RPOP_COUNT';
import * as RPOP from './RPOP';
import * as RPOPLPUSH from './RPOPLPUSH';
import * as RPUSH from './RPUSH';
import * as RPUSHX from './RPUSHX';
import * as SADD from './SADD';
import * as SAVE from './SAVE';
import * as SCAN from './SCAN';
import * as SCARD from './SCARD';
import * as SCRIPT_DEBUG from './SCRIPT_DEBUG';
import * as SCRIPT_EXISTS from './SCRIPT_EXISTS';
import * as SCRIPT_FLUSH from './SCRIPT_FLUSH';
import * as SCRIPT_KILL from './SCRIPT_KILL';
import * as SCRIPT_LOAD from './SCRIPT_LOAD';
import * as SDIFF from './SDIFF';
import * as SDIFFSTORE from './SDIFFSTORE';
import * as SET from './SET';
import * as SETBIT from './SETBIT';
import * as SETEX from './SETEX';
import * as SETNX from './SETNX';
import * as SETRANGE from './SETRANGE';
import * as SHUTDOWN from './SHUTDOWN';
import * as SINTER from './SINTER';
import * as SINTERSTORE from './SINTERSTORE';
import * as SISMEMBER from './SISMEMBER';
import * as SMEMBERS from './SMEMBERS';
import * as SMISMEMBER from './SMISMEMBER';
import * as SMOVE from './SMOVE';
import * as SORT from './SORT';
import * as SPOP from './SPOP';
import * as SRANDMEMBER_COUNT from './SRANDMEMBER_COUNT';
import * as SRANDMEMBER from './SRANDMEMBER';
import * as SREM from './SREM';
import * as SSCAN from './SSCAN';
import * as STRLEN from './STRLEN';
import * as SUNION from './SUNION';
import * as SUNIONSTORE from './SUNIONSTORE';
import * as SWAPDB from './SWAPDB';
import * as TIME from './TIME';
import * as TOUCH from './TOUCH';
import * as TTL from './TTL';
import * as TYPE from './TYPE';
import * as UNLINK from './UNLINK';
import * as UNWATCH from './UNWATCH';
import * as WAIT from './WAIT';
import * as WATCH from './WATCH';
import * as XACK from './XACK';
import * as XADD from './XADD';
import * as XAUTOCLAIM_JUSTID from './XAUTOCLAIM_JUSTID';
import * as XAUTOCLAIM from './XAUTOCLAIM';
import * as XCLAIM from './XCLAIM';
import * as XCLAIM_JUSTID from './XCLAIM_JUSTID';
import * as XDEL from './XDEL';
import * as XGROUP_CREATE from './XGROUP_CREATE';
import * as XGROUP_CREATECONSUMER from './XGROUP_CREATECONSUMER';
import * as XGROUP_DELCONSUMER from './XGROUP_DELCONSUMER';
import * as XGROUP_DESTROY from './XGROUP_DESTROY';
import * as XGROUP_SETID from './XGROUP_SETID';
import * as XINFO_CONSUMERS from './XINFO_CONSUMERS';
import * as XINFO_GROUPS from './XINFO_GROUPS';
import * as XINFO_STREAM from './XINFO_STREAM';
import * as XLEN from './XLEN';
import * as XPENDING_RANGE from './XPENDING_RANGE';
import * as XPENDING from './XPENDING';
import * as XRANGE from './XRANGE';
import * as XREAD from './XREAD';
import * as XREADGROUP from './XREADGROUP';
import * as XREVRANGE from './XREVRANGE';
import * as XTRIM from './XTRIM';
import * as ZADD from './ZADD';
import * as ZCARD from './ZCARD';
import * as ZCOUNT from './ZCOUNT';
import * as ZDIFF_WITHSCORES from './ZDIFF_WITHSCORES';
import * as ZDIFF from './ZDIFF';
import * as ZDIFFSTORE from './ZDIFFSTORE';
import * as ZINCRBY from './ZINCRBY';
import * as ZINTER_WITHSCORES from './ZINTER_WITHSCORES';
import * as ZINTER from './ZINTER';
import * as ZINTERSTORE from './ZINTERSTORE';
import * as ZLEXCOUNT from './ZLEXCOUNT';
import * as ZMSCORE from './ZMSCORE';
import * as ZPOPMAX_COUNT from './ZPOPMAX_COUNT';
import * as ZPOPMAX from './ZPOPMAX';
import * as ZPOPMIN_COUNT from './ZPOPMIN_COUNT';
import * as ZPOPMIN from './ZPOPMIN';
import * as ZRANDMEMBER_COUNT_WITHSCORES from './ZRANDMEMBER_COUNT_WITHSCORES';
import * as ZRANDMEMBER_COUNT from './ZRANDMEMBER_COUNT';
import * as ZRANDMEMBER from './ZRANDMEMBER';
import * as ZRANGE_WITHSCORES from './ZRANGE_WITHSCORES';
import * as ZRANGE from './ZRANGE';
import * as ZRANGESTORE from './ZRANGESTORE';
import * as ZRANK from './ZRANK';
import * as ZREM from './ZREM';
import * as ZREMRANGEBYLEX from './ZREMRANGEBYLEX';
import * as ZREMRANGEBYRANK from './ZREMRANGEBYRANK';
import * as ZREMRANGEBYSCORE from './ZREMRANGEBYSCORE';
import * as ZREVRANK from './ZREVRANK';
import * as ZSCAN from './ZSCAN';
import * as ZSCORE from './ZSCORE';
import * as ZUNION_WITHSCORES from './ZUNION_WITHSCORES';
import * as ZUNION from './ZUNION';
import * as ZUNIONSTORE from './ZUNIONSTORE';
declare const _default: {
    ACL_CAT: typeof ACL_CAT;
    aclCat: typeof ACL_CAT;
    ACL_DELUSER: typeof ACL_DELUSER;
    aclDelUser: typeof ACL_DELUSER;
    ACL_GENPASS: typeof ACL_GENPASS;
    aclGenPass: typeof ACL_GENPASS;
    ACL_GETUSER: typeof ACL_GETUSER;
    aclGetUser: typeof ACL_GETUSER;
    ACL_LIST: typeof ACL_LIST;
    aclList: typeof ACL_LIST;
    ACL_LOAD: typeof ACL_LOAD;
    aclLoad: typeof ACL_LOAD;
    ACL_LOG_RESET: typeof ACL_LOG_RESET;
    aclLogReset: typeof ACL_LOG_RESET;
    ACL_LOG: typeof ACL_LOG;
    aclLog: typeof ACL_LOG;
    ACL_SAVE: typeof ACL_SAVE;
    aclSave: typeof ACL_SAVE;
    ACL_SETUSER: typeof ACL_SETUSER;
    aclSetUser: typeof ACL_SETUSER;
    ACL_USERS: typeof ACL_USERS;
    aclUsers: typeof ACL_USERS;
    ACL_WHOAMI: typeof ACL_WHOAMI;
    aclWhoAmI: typeof ACL_WHOAMI;
    APPEND: typeof APPEND;
    append: typeof APPEND;
    ASKING: typeof ASKING;
    asking: typeof ASKING;
    AUTH: typeof AUTH;
    auth: typeof AUTH;
    BGREWRITEAOF: typeof BGREWRITEAOF;
    bgRewriteAof: typeof BGREWRITEAOF;
    BGSAVE: typeof BGSAVE;
    bgSave: typeof BGSAVE;
    BITCOUNT: typeof BITCOUNT;
    bitCount: typeof BITCOUNT;
    BITFIELD: typeof BITFIELD;
    bitField: typeof BITFIELD;
    BITOP: typeof BITOP;
    bitOp: typeof BITOP;
    BITPOS: typeof BITPOS;
    bitPos: typeof BITPOS;
    BLMOVE: typeof BLMOVE;
    blMove: typeof BLMOVE;
    BLPOP: typeof BLPOP;
    blPop: typeof BLPOP;
    BRPOP: typeof BRPOP;
    brPop: typeof BRPOP;
    BRPOPLPUSH: typeof BRPOPLPUSH;
    brPopLPush: typeof BRPOPLPUSH;
    BZPOPMAX: typeof BZPOPMAX;
    bzPopMax: typeof BZPOPMAX;
    BZPOPMIN: typeof BZPOPMIN;
    bzPopMin: typeof BZPOPMIN;
    CLIENT_INFO: typeof CLIENT_INFO;
    clientInfo: typeof CLIENT_INFO;
    CLUSTER_ADDSLOTS: typeof CLUSTER_ADDSLOTS;
    clusterAddSlots: typeof CLUSTER_ADDSLOTS;
    CLUSTER_FLUSHSLOTS: typeof CLUSTER_FLUSHSLOTS;
    clusterFlushSlots: typeof CLUSTER_FLUSHSLOTS;
    CLUSTER_INFO: typeof CLUSTER_INFO;
    clusterInfo: typeof CLUSTER_INFO;
    CLUSTER_NODES: typeof CLUSTER_NODES;
    clusterNodes: typeof CLUSTER_NODES;
    CLUSTER_MEET: typeof CLUSTER_MEET;
    clusterMeet: typeof CLUSTER_MEET;
    CLUSTER_RESET: typeof CLUSTER_RESET;
    clusterReset: typeof CLUSTER_RESET;
    CLUSTER_SETSLOT: typeof CLUSTER_SETSLOT;
    clusterSetSlot: typeof CLUSTER_SETSLOT;
    CONFIG_GET: typeof CONFIG_GET;
    configGet: typeof CONFIG_GET;
    CONFIG_RESETASTAT: typeof CONFIG_RESETASTAT;
    configResetStat: typeof CONFIG_RESETASTAT;
    CONFIG_REWRITE: typeof CONFIG_REWRITE;
    configRewrite: typeof CONFIG_REWRITE;
    CONFIG_SET: typeof CONFIG_SET;
    configSet: typeof CONFIG_SET;
    COPY: typeof COPY;
    copy: typeof COPY;
    DBSIZE: typeof DBSIZE;
    dbSize: typeof DBSIZE;
    DECR: typeof DECR;
    decr: typeof DECR;
    DECRBY: typeof DECRBY;
    decrBy: typeof DECRBY;
    DEL: typeof DEL;
    del: typeof DEL;
    DISCARD: typeof DISCARD;
    discard: typeof DISCARD;
    DUMP: typeof DUMP;
    dump: typeof DUMP;
    ECHO: typeof ECHO;
    echo: typeof ECHO;
    EVAL: typeof EVAL;
    eval: typeof EVAL;
    EVALSHA: typeof EVALSHA;
    evalSha: typeof EVALSHA;
    EXISTS: typeof EXISTS;
    exists: typeof EXISTS;
    EXPIRE: typeof EXPIRE;
    expire: typeof EXPIRE;
    EXPIREAT: typeof EXPIREAT;
    expireAt: typeof EXPIREAT;
    FAILOVER: typeof FAILOVER;
    failover: typeof FAILOVER;
    FLUSHALL: typeof FLUSHALL;
    flushAll: typeof FLUSHALL;
    FLUSHDB: typeof FLUSHDB;
    flushDb: typeof FLUSHDB;
    GEOADD: typeof GEOADD;
    geoAdd: typeof GEOADD;
    GEODIST: typeof GEODIST;
    geoDist: typeof GEODIST;
    GEOHASH: typeof GEOHASH;
    geoHash: typeof GEOHASH;
    GEOPOS: typeof GEOPOS;
    geoPos: typeof GEOPOS;
    GEOSEARCH_WITH: typeof GEOSEARCH_WITH;
    geoSearchWith: typeof GEOSEARCH_WITH;
    GEOSEARCH: typeof GEOSEARCH;
    geoSearch: typeof GEOSEARCH;
    GEOSEARCHSTORE: typeof GEOSEARCHSTORE;
    geoSearchStore: typeof GEOSEARCHSTORE;
    GET: typeof GET;
    get: typeof GET;
    GETBIT: typeof GETBIT;
    getBit: typeof GETBIT;
    GETDEL: typeof GETDEL;
    getDel: typeof GETDEL;
    GETEX: typeof GETEX;
    getEx: typeof GETEX;
    GETRANGE: typeof GETRANGE;
    getRange: typeof GETRANGE;
    GETSET: typeof GETSET;
    getSet: typeof GETSET;
    HDEL: typeof HDEL;
    hDel: typeof HDEL;
    HELLO: typeof HELLO;
    hello: typeof HELLO;
    HEXISTS: typeof HEXISTS;
    hExists: typeof HEXISTS;
    HGET: typeof HGET;
    hGet: typeof HGET;
    HGETALL: typeof HGETALL;
    hGetAll: typeof HGETALL;
    HINCRBY: typeof HINCRBY;
    hIncrBy: typeof HINCRBY;
    HINCRBYFLOAT: typeof HINCRBYFLOAT;
    hIncrByFloat: typeof HINCRBYFLOAT;
    HKEYS: typeof HKEYS;
    hKeys: typeof HKEYS;
    HLEN: typeof HLEN;
    hLen: typeof HLEN;
    HMGET: typeof HMGET;
    hmGet: typeof HMGET;
    HRANDFIELD_COUNT_WITHVALUES: typeof HRANDFIELD_COUNT_WITHVALUES;
    hRandFieldCountWithValues: typeof HRANDFIELD_COUNT_WITHVALUES;
    HRANDFIELD_COUNT: typeof HRANDFIELD_COUNT;
    hRandFieldCount: typeof HRANDFIELD_COUNT;
    HRANDFIELD: typeof HRANDFIELD;
    hRandField: typeof HRANDFIELD;
    HSCAN: typeof HSCAN;
    hScan: typeof HSCAN;
    HSET: typeof HSET;
    hSet: typeof HSET;
    HSETNX: typeof HSETNX;
    hSetNX: typeof HSETNX;
    HSTRLEN: typeof HSTRLEN;
    hStrLen: typeof HSTRLEN;
    HVALS: typeof HVALS;
    hVals: typeof HVALS;
    INCR: typeof INCR;
    incr: typeof INCR;
    INCRBY: typeof INCRBY;
    incrBy: typeof INCRBY;
    INCRBYFLOAT: typeof INCRBYFLOAT;
    incrByFloat: typeof INCRBYFLOAT;
    INFO: typeof INFO;
    info: typeof INFO;
    KEYS: typeof KEYS;
    keys: typeof KEYS;
    LASTSAVE: typeof LASTSAVE;
    lastSave: typeof LASTSAVE;
    LINDEX: typeof LINDEX;
    lIndex: typeof LINDEX;
    LINSERT: typeof LINSERT;
    lInsert: typeof LINSERT;
    LLEN: typeof LLEN;
    lLen: typeof LLEN;
    LMOVE: typeof LMOVE;
    lMove: typeof LMOVE;
    LOLWUT: typeof LOLWUT;
    LPOP_COUNT: typeof LPOP_COUNT;
    lPopCount: typeof LPOP_COUNT;
    LPOP: typeof LPOP;
    lPop: typeof LPOP;
    LPOS_COUNT: typeof LPOS_COUNT;
    lPosCount: typeof LPOS_COUNT;
    LPOS: typeof LPOS;
    lPos: typeof LPOS;
    LPUSH: typeof LPUSH;
    lPush: typeof LPUSH;
    LPUSHX: typeof LPUSHX;
    lPushX: typeof LPUSHX;
    LRANGE: typeof LRANGE;
    lRange: typeof LRANGE;
    LREM: typeof LREM;
    lRem: typeof LREM;
    LSET: typeof LSET;
    lSet: typeof LSET;
    LTRIM: typeof LTRIM;
    lTrim: typeof LTRIM;
    MEMOERY_DOCTOR: typeof MEMOERY_DOCTOR;
    memoryDoctor: typeof MEMOERY_DOCTOR;
    'MEMORY_MALLOC-STATS': typeof MEMORY_MALLOC_STATS;
    memoryMallocStats: typeof MEMORY_MALLOC_STATS;
    MEMORY_PURGE: typeof MEMORY_PURGE;
    memoryPurge: typeof MEMORY_PURGE;
    MEMORY_STATS: typeof MEMORY_STATS;
    memoryStats: typeof MEMORY_STATS;
    MEMORY_USAGE: typeof MEMORY_USAGE;
    memoryUsage: typeof MEMORY_USAGE;
    MGET: typeof MGET;
    mGet: typeof MGET;
    MIGRATE: typeof MIGRATE;
    migrate: typeof MIGRATE;
    MODULE_LIST: typeof MODULE_LIST;
    moduleList: typeof MODULE_LIST;
    MODULE_LOAD: typeof MODULE_LOAD;
    moduleLoad: typeof MODULE_LOAD;
    MODULE_UNLOAD: typeof MODULE_UNLOAD;
    moduleUnload: typeof MODULE_UNLOAD;
    MOVE: typeof MOVE;
    move: typeof MOVE;
    MSET: typeof MSET;
    mSet: typeof MSET;
    MSETNX: typeof MSETNX;
    mSetNX: typeof MSETNX;
    PERSIST: typeof PERSIST;
    persist: typeof PERSIST;
    PEXPIRE: typeof PEXPIRE;
    pExpire: typeof PEXPIRE;
    PEXPIREAT: typeof PEXPIREAT;
    pExpireAt: typeof PEXPIREAT;
    PFADD: typeof PFADD;
    pfAdd: typeof PFADD;
    PFCOUNT: typeof PFCOUNT;
    pfCount: typeof PFCOUNT;
    PFMERGE: typeof PFMERGE;
    pfMerge: typeof PFMERGE;
    PING: typeof PING;
    ping: typeof PING;
    PSETEX: typeof PSETEX;
    pSetEx: typeof PSETEX;
    PTTL: typeof PTTL;
    pTTL: typeof PTTL;
    PUBLISH: typeof PUBLISH;
    publish: typeof PUBLISH;
    PUBSUB_CHANNELS: typeof PUBSUB_CHANNELS;
    pubSubChannels: typeof PUBSUB_CHANNELS;
    PUBSUB_NUMPAT: typeof PUBSUB_NUMPAT;
    pubSubNumPat: typeof PUBSUB_NUMPAT;
    PUBSUB_NUMSUB: typeof PUBSUB_NUMSUB;
    pubSubNumSub: typeof PUBSUB_NUMSUB;
    RANDOMKEY: typeof RANDOMKEY;
    randomKey: typeof RANDOMKEY;
    READONLY: typeof READONLY;
    readonly: typeof READONLY;
    READWRITE: typeof READWRITE;
    readwrite: typeof READWRITE;
    RENAME: typeof RENAME;
    rename: typeof RENAME;
    RENAMENX: typeof RENAMENX;
    renameNX: typeof RENAMENX;
    REPLICAOF: typeof REPLICAOF;
    replicaOf: typeof REPLICAOF;
    'RESTORE-ASKING': typeof RESTORE_ASKING;
    restoreAsking: typeof RESTORE_ASKING;
    ROLE: typeof ROLE;
    role: typeof ROLE;
    RPOP_COUNT: typeof RPOP_COUNT;
    rPopCount: typeof RPOP_COUNT;
    RPOP: typeof RPOP;
    rPop: typeof RPOP;
    RPOPLPUSH: typeof RPOPLPUSH;
    rPopLPush: typeof RPOPLPUSH;
    RPUSH: typeof RPUSH;
    rPush: typeof RPUSH;
    RPUSHX: typeof RPUSHX;
    rPushX: typeof RPUSHX;
    SADD: typeof SADD;
    sAdd: typeof SADD;
    SAVE: typeof SAVE;
    save: typeof SAVE;
    SCAN: typeof SCAN;
    scan: typeof SCAN;
    SCARD: typeof SCARD;
    sCard: typeof SCARD;
    SCRIPT_DEBUG: typeof SCRIPT_DEBUG;
    scriptDebug: typeof SCRIPT_DEBUG;
    SCRIPT_EXISTS: typeof SCRIPT_EXISTS;
    scriptExists: typeof SCRIPT_EXISTS;
    SCRIPT_FLUSH: typeof SCRIPT_FLUSH;
    scriptFlush: typeof SCRIPT_FLUSH;
    SCRIPT_KILL: typeof SCRIPT_KILL;
    scriptKill: typeof SCRIPT_KILL;
    SCRIPT_LOAD: typeof SCRIPT_LOAD;
    scriptLoad: typeof SCRIPT_LOAD;
    SDIFF: typeof SDIFF;
    sDiff: typeof SDIFF;
    SDIFFSTORE: typeof SDIFFSTORE;
    sDiffStore: typeof SDIFFSTORE;
    SINTER: typeof SINTER;
    sInter: typeof SINTER;
    SINTERSTORE: typeof SINTERSTORE;
    sInterStore: typeof SINTERSTORE;
    SET: typeof SET;
    set: typeof SET;
    SETBIT: typeof SETBIT;
    setBit: typeof SETBIT;
    SETEX: typeof SETEX;
    setEx: typeof SETEX;
    SETNX: typeof SETNX;
    setNX: typeof SETNX;
    SETRANGE: typeof SETRANGE;
    setRange: typeof SETRANGE;
    SHUTDOWN: typeof SHUTDOWN;
    shutdown: typeof SHUTDOWN;
    SISMEMBER: typeof SISMEMBER;
    sIsMember: typeof SISMEMBER;
    SMEMBERS: typeof SMEMBERS;
    sMembers: typeof SMEMBERS;
    SMISMEMBER: typeof SMISMEMBER;
    smIsMember: typeof SMISMEMBER;
    SMOVE: typeof SMOVE;
    sMove: typeof SMOVE;
    SORT: typeof SORT;
    sort: typeof SORT;
    SPOP: typeof SPOP;
    sPop: typeof SPOP;
    SRANDMEMBER_COUNT: typeof SRANDMEMBER_COUNT;
    sRandMemberCount: typeof SRANDMEMBER_COUNT;
    SRANDMEMBER: typeof SRANDMEMBER;
    sRandMember: typeof SRANDMEMBER;
    SREM: typeof SREM;
    sRem: typeof SREM;
    SSCAN: typeof SSCAN;
    sScan: typeof SSCAN;
    STRLEN: typeof STRLEN;
    strLen: typeof STRLEN;
    SUNION: typeof SUNION;
    sUnion: typeof SUNION;
    SUNIONSTORE: typeof SUNIONSTORE;
    sUnionStore: typeof SUNIONSTORE;
    SWAPDB: typeof SWAPDB;
    swapDb: typeof SWAPDB;
    TIME: typeof TIME;
    time: typeof TIME;
    TOUCH: typeof TOUCH;
    touch: typeof TOUCH;
    TTL: typeof TTL;
    ttl: typeof TTL;
    TYPE: typeof TYPE;
    type: typeof TYPE;
    UNLINK: typeof UNLINK;
    unlink: typeof UNLINK;
    UNWATCH: typeof UNWATCH;
    unwatch: typeof UNWATCH;
    WAIT: typeof WAIT;
    wait: typeof WAIT;
    WATCH: typeof WATCH;
    watch: typeof WATCH;
    XACK: typeof XACK;
    xAck: typeof XACK;
    XADD: typeof XADD;
    xAdd: typeof XADD;
    XAUTOCLAIM_JUSTID: typeof XAUTOCLAIM_JUSTID;
    xAutoClaimJustId: typeof XAUTOCLAIM_JUSTID;
    XAUTOCLAIM: typeof XAUTOCLAIM;
    xAutoClaim: typeof XAUTOCLAIM;
    XCLAIM: typeof XCLAIM;
    xClaim: typeof XCLAIM;
    XCLAIM_JUSTID: typeof XCLAIM_JUSTID;
    xClaimJustId: typeof XCLAIM_JUSTID;
    XDEL: typeof XDEL;
    xDel: typeof XDEL;
    XGROUP_CREATE: typeof XGROUP_CREATE;
    xGroupCreate: typeof XGROUP_CREATE;
    XGROUP_CREATECONSUMER: typeof XGROUP_CREATECONSUMER;
    xGroupCreateConsumer: typeof XGROUP_CREATECONSUMER;
    XGROUP_DELCONSUMER: typeof XGROUP_DELCONSUMER;
    xGroupDelConsumer: typeof XGROUP_DELCONSUMER;
    XGROUP_DESTROY: typeof XGROUP_DESTROY;
    xGroupDestroy: typeof XGROUP_DESTROY;
    XGROUP_SETID: typeof XGROUP_SETID;
    xGroupSetId: typeof XGROUP_SETID;
    XINFO_CONSUMERS: typeof XINFO_CONSUMERS;
    xInfoConsumers: typeof XINFO_CONSUMERS;
    XINFO_GROUPS: typeof XINFO_GROUPS;
    xInfoGroups: typeof XINFO_GROUPS;
    XINFO_STREAM: typeof XINFO_STREAM;
    xInfoStream: typeof XINFO_STREAM;
    XLEN: typeof XLEN;
    xLen: typeof XLEN;
    XPENDING_RANGE: typeof XPENDING_RANGE;
    xPendingRange: typeof XPENDING_RANGE;
    XPENDING: typeof XPENDING;
    xPending: typeof XPENDING;
    XRANGE: typeof XRANGE;
    xRange: typeof XRANGE;
    XREAD: typeof XREAD;
    xRead: typeof XREAD;
    XREADGROUP: typeof XREADGROUP;
    xReadGroup: typeof XREADGROUP;
    XREVRANGE: typeof XREVRANGE;
    xRevRange: typeof XREVRANGE;
    XTRIM: typeof XTRIM;
    xTrim: typeof XTRIM;
    ZADD: typeof ZADD;
    zAdd: typeof ZADD;
    ZCARD: typeof ZCARD;
    zCard: typeof ZCARD;
    ZCOUNT: typeof ZCOUNT;
    zCount: typeof ZCOUNT;
    ZDIFF_WITHSCORES: typeof ZDIFF_WITHSCORES;
    zDiffWithScores: typeof ZDIFF_WITHSCORES;
    ZDIFF: typeof ZDIFF;
    zDiff: typeof ZDIFF;
    ZDIFFSTORE: typeof ZDIFFSTORE;
    zDiffStore: typeof ZDIFFSTORE;
    ZINCRBY: typeof ZINCRBY;
    zIncrBy: typeof ZINCRBY;
    ZINTER_WITHSCORES: typeof ZINTER_WITHSCORES;
    zInterWithScores: typeof ZINTER_WITHSCORES;
    ZINTER: typeof ZINTER;
    zInter: typeof ZINTER;
    ZINTERSTORE: typeof ZINTERSTORE;
    zInterStore: typeof ZINTERSTORE;
    ZLEXCOUNT: typeof ZLEXCOUNT;
    zLexCount: typeof ZLEXCOUNT;
    ZMSCORE: typeof ZMSCORE;
    zmScore: typeof ZMSCORE;
    ZPOPMAX_COUNT: typeof ZPOPMAX_COUNT;
    zPopMaxCount: typeof ZPOPMAX_COUNT;
    ZPOPMAX: typeof ZPOPMAX;
    zPopMax: typeof ZPOPMAX;
    ZPOPMIN_COUNT: typeof ZPOPMIN_COUNT;
    zPopMinCount: typeof ZPOPMIN_COUNT;
    ZPOPMIN: typeof ZPOPMIN;
    zPopMin: typeof ZPOPMIN;
    ZRANDMEMBER_COUNT_WITHSCORES: typeof ZRANDMEMBER_COUNT_WITHSCORES;
    zRandMemberCountWithScores: typeof ZRANDMEMBER_COUNT_WITHSCORES;
    ZRANDMEMBER_COUNT: typeof ZRANDMEMBER_COUNT;
    zRandMemberCount: typeof ZRANDMEMBER_COUNT;
    ZRANDMEMBER: typeof ZRANDMEMBER;
    zRandMember: typeof ZRANDMEMBER;
    ZRANGE_WITHSCORES: typeof ZRANGE_WITHSCORES;
    zRangeWithScores: typeof ZRANGE_WITHSCORES;
    ZRANGE: typeof ZRANGE;
    zRange: typeof ZRANGE;
    ZRANGESTORE: typeof ZRANGESTORE;
    zRangeStore: typeof ZRANGESTORE;
    ZRANK: typeof ZRANK;
    zRank: typeof ZRANK;
    ZREM: typeof ZREM;
    zRem: typeof ZREM;
    ZREMRANGEBYLEX: typeof ZREMRANGEBYLEX;
    zRemRangeByLex: typeof ZREMRANGEBYLEX;
    ZREMRANGEBYRANK: typeof ZREMRANGEBYRANK;
    zRemRangeByRank: typeof ZREMRANGEBYRANK;
    ZREMRANGEBYSCORE: typeof ZREMRANGEBYSCORE;
    zRemRangeByScore: typeof ZREMRANGEBYSCORE;
    ZREVRANK: typeof ZREVRANK;
    zRevRank: typeof ZREVRANK;
    ZSCAN: typeof ZSCAN;
    zScan: typeof ZSCAN;
    ZSCORE: typeof ZSCORE;
    zScore: typeof ZSCORE;
    ZUNION_WITHSCORES: typeof ZUNION_WITHSCORES;
    zUnionWithScores: typeof ZUNION_WITHSCORES;
    ZUNION: typeof ZUNION;
    zUnion: typeof ZUNION;
    ZUNIONSTORE: typeof ZUNIONSTORE;
    zUnionStore: typeof ZUNIONSTORE;
};
export default _default;
export declare type RedisReply = string | number | Array<RedisReply> | null | undefined;
export declare type TransformArgumentsReply = Array<string> & {
    preserve?: unknown;
};
export interface RedisCommand {
    FIRST_KEY_INDEX?: number | ((...args: Array<any>) => string);
    IS_READ_ONLY?: boolean;
    transformArguments(...args: Array<any>): TransformArgumentsReply;
    transformReply(reply: RedisReply, preserved: unknown): any;
}
export interface RedisCommands {
    [command: string]: RedisCommand;
}
export interface RedisModule {
    [key: string]: RedisCommand;
}
export declare type RedisModules = Record<string, RedisModule>;
