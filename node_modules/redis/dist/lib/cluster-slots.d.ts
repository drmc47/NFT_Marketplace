import { RedisClientType } from './client';
import { RedisClusterOptions } from './cluster';
import { RedisModules } from './commands';
import { RedisLuaScripts } from './lua-script';
export interface ClusterNode<M extends RedisModules, S extends RedisLuaScripts> {
    id: string;
    client: RedisClientType<M, S>;
}
export default class RedisClusterSlots<M extends RedisModules, S extends RedisLuaScripts> {
    #private;
    constructor(options: RedisClusterOptions);
    connect(): Promise<void>;
    discover(startWith: RedisClientType<M, S>): Promise<void>;
    getSlotMaster(slot: number): ClusterNode<M, S>;
    getClient(firstKey?: string, isReadonly?: boolean): RedisClientType<M, S>;
    getMasters(): Array<ClusterNode<M, S>>;
    getNodeByUrl(url: string): ClusterNode<M, S> | undefined;
    disconnect(): Promise<void>;
}
